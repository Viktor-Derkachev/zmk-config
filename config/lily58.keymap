/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        adjust_layer {
            bindings = <&to 3>;
            key-positions = <55 52>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3     &kp N4                  &kp N5                                  &kp N6  &kp N7              &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB         &kp Q   &kp W   &kp E      &kp R                   &kp T                                   &kp Y   &kp U               &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp LEFT_GUI    &kp A   &kp S   &kp D      &kp F                   &kp G                                   &kp H   &kp J               &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C      &kp V                   &kp B   &kp GRAVE    &kp RIGHT_BRACKET  &kp N   &kp M               &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT ENTER
                                &kp LCTRL  &mt LEFT_ALT BACKSPACE  &to 1   &kp SPACE    &kp SPACE          &to 2   &mt RALT BACKSPACE  &kp RCTRL
            >;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1          &kp F2         &kp F3          &kp F4         &kp F5           &kp F6                           &kp F7     &kp F8          &kp F9            &kp F10            &kp F11               &kp F12
&kp CAPSLOCK    &trans         &kp LA(LEFT)    &kp UP_ARROW   &kp LA(RIGHT)    &trans                           &trans     &trans          &trans            &trans             &trans                &kp PAGE_UP
&kp ENTER       &trans         &kp LEFT_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &kp BACKSPACE                    &trans     &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW       &kp RIGHT             &kp PAGE_DOWN
&kp LEFT_SHIFT  &kp LC(SPACE)  &kp HOME        &kp INS        &kp END          &kp DEL        &trans    &trans  &kp MINUS  &kp EQUAL       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH  &mt RIGHT_SHIFT PIPE
                                               &kp LA(ENTER)  &kp LG(ENTER)    &trans         &trans    &trans  &trans     &trans          &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp C_BRI_DN   &kp C_BRI_UP  &kp LG(LS(NUMBER_2))  &kp LG(LS(NUMBER_3))  &kp LG(LS(NUMBER_4))  &trans                    &kp C_PREVIOUS  &kp C_PAUSE  &kp C_NEXT  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&kp GRAVE      &kp N1        &kp N2                &kp N3                &kp N4                &kp N5                    &kp N6          &kp N7       &kp N8      &kp N9      &kp N0             &kp LS(PIPE)
&trans         &trans        &trans                &trans                &trans                &trans                    &trans          &kp LEFT     &kp DOWN    &kp UP      &kp RIGHT          &trans
&kp LC(SPACE)  &trans        &trans                &trans                &trans                &trans  &trans    &trans  &kp KP_PLUS     &kp MINUS    &kp EQUAL   &kp LBKT    &kp RBKT           &kp BSLH
                                                   &trans                &trans                &trans  &trans    &trans  &trans          &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adjust_layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans      &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans                    &trans      &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans  &trans    &trans  &trans      &trans        &trans
            >;
        };
    };
};
