/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        adjust_layer {
            bindings = <&mo 3>;
            key-positions = <53 54>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE       &kp N1  &kp N2  &kp N3     &kp N4        &kp N5                                                &kp N6              &kp N7        &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp ESC         &kp Q   &kp W   &kp E      &kp R         &kp T                                                 &kp Y               &kp U         &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp TAB         &kp A   &kp S   &kp D      &kp F         &kp G                                                 &kp H               &kp J         &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C      &kp V         &kp B               &kp ENTER      &kp RIGHT_BRACKET  &kp N               &kp M         &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                &kp LCTRL  &kp LEFT_ALT  &mt LGUI BACKSPACE  &lt 1 SPACE    &lt 2 SPACE        &mt RGUI BACKSPACE  &mt RALT DEL  &kp RCTRL
            >;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1              &kp F2         &kp F3    &kp F4        &kp F5           &kp F6                                &kp F7     &kp F8          &kp F9            &kp F10            &kp F11               &kp F12
&kp GRAVE           &kp N1         &kp N2    &kp N3        &kp N4           &kp N5                                &kp N6     &kp N7          &kp N8            &kp N9             &kp N0                &kp PAGE_UP
&kp LA(LEFT_ARROW)  &kp LEFT       &kp DOWN  &kp UP_ARROW  &kp RIGHT_ARROW  &kp LA(RIGHT)                         &trans     &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW       &kp RIGHT             &kp PAGE_DOWN
&kp LEFT_SHIFT      &kp LC(SPACE)  &kp HOME  &kp INS       &kp END          &kp DEL        &kp ENTER    &kp CLCK  &kp MINUS  &kp EQUAL       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH  &kp RIGHT_SHIFT
                                             &kp LCTRL     &kp LEFT_ALT     &kp LGUI       &trans       &trans    &kp RGUI   &kp RALT        &kp RCTRL
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp C_BRI_DN    &kp C_BRI_UP  &kp LG(LS(NUMBER_2))  &kp LG(LS(NUMBER_3))  &kp LG(LS(NUMBER_4))  &kp LG(LS(N5))                    &kp C_PREVIOUS  &kp C_PAUSE  &kp C_NEXT        &kp K_MUTE         &kp C_VOLUME_DOWN     &kp C_VOLUME_UP
&kp LS(GRAVE)   &kp LS(N1)    &kp LS(N2)            &kp LS(N3)            &kp LS(N4)            &kp LS(N5)                        &kp LS(N6)      &kp LS(N7)   &kp LS(N8)        &kp LS(N9)         &kp LS(N0)            &kp LS(MINUS)
&trans          &trans        &trans                &trans                &trans                &trans                            &trans          &kp LEFT     &kp DOWN          &kp UP             &kp RIGHT             &kp ENTER
&kp LEFT_SHIFT  &trans        &trans                &trans                &trans                &trans          &trans    &trans  &kp MINUS       &kp EQUAL    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH  &kp RIGHT_SHIFT
                                                    &kp LCTRL             &kp LEFT_ALT          &kp LEFT_GUI    &trans    &trans  &kp RGUI        &kp RALT     &kp RCTRL
            >;
        };

        adjust_layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans      &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans                    &trans      &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans  &trans    &trans  &trans      &trans        &trans
            >;
        };
    };
};
